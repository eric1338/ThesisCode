

			KeyPreview = true;
			KeyUp += Form1_KeyUp;
			KeyDown += Form1_KeyDown;



		private double downTime = -1;
		private double upTime = -1;

		private double GetCurrentTime()
		{
			double left = visualValues.LeftTimeMargin;
			double right = visualValues.RightTimeMargin;

			return left + ((right - left) / 2);
		}

		private void Form1_KeyDown(object sender, KeyEventArgs e)
		{
			if (downTime < 0) downTime = GetCurrentTime();
		}

		private void Form1_KeyUp(object sender, KeyEventArgs e)
		{
			if (downTime > 0 && upTime < 0)
			{
				upTime = GetCurrentTime();
				Console.WriteLine("x" + downTime + "y" + upTime + "z");
			}

			downTime = -1;
			upTime = -1;
		}



//////////////////////////////////





		static float[] noteStartSum = new float[17];
		static float[] noteEndSum = new float[17];
		static int[] samplesCount = new int[17];

		private static void Test()
		{
			for (int i = 0; i < 17; i++)
			{
				noteStartSum[i] = 0;
				noteEndSum[i] = 0;
				samplesCount[i] = 0;
			}

			AddNotes();

			for (int i = 0; i < 17; i++)
			{
				float sV = (float)Math.Round(noteStartSum[i] / samplesCount[i], 3);
				float eV = (float)Math.Round(noteEndSum[i] / samplesCount[i], 3);

				Console.WriteLine("x" + (sV - 0.03f) + "y0z");
				Console.WriteLine("x" + sV + "y1z");
				Console.WriteLine("x" + eV + "y1z");
				Console.WriteLine("x" + (eV + 0.03f) + "y0z");
			}
		}

		private static void AddNotes()
		{

			AddNote(0, 12.057247027972, 13.259041627972);
			AddNote(0, 12.156883527972, 13.252211327972);
			AddNote(0, 12.161072827972, 13.252796527972);
			AddNote(0, 12.177230986713, 13.162527486713);
			AddNote(0, 12.053615579720, 13.147485979720);
			AddNote(0, 12.046052920979, 13.359992820979);
			AddNote(0, 12.042363320979, 13.247843620979);
			AddNote(0, 12.164598127972, 13.371318827972);
			AddNote(0, 12.034977765734, 13.242518765734);

			AddNote(1, 15.887964727972, 16.650971227972);
			AddNote(1, 15.880294027972, 16.750464527972);
			AddNote(1, 15.876840527972, 16.757174527972);
			AddNote(1, 15.896050286713, 16.665309286133);
			AddNote(1, 15.883321279720, 16.866760479720);
			AddNote(1, 15.871301520979, 16.855780120979);
			AddNote(1, 15.871845620979, 16.854766620979);
			AddNote(1, 15.883072427972, 16.865599827972);
			AddNote(1, 15.865587865734, 16.629111665734);
			AddNote(1, 15.874830717482, 16.640409317482);

			AddNote(2, 18.511244127972, 20.153123827972);
			AddNote(2, 18.501240927972, 20.363278627972);
			AddNote(2, 18.502604927972, 20.258633327972);
			AddNote(2, 18.521130786713, 19.832860386713);
			AddNote(2, 18.508652479720, 20.147851679720);
			AddNote(2, 18.499417920979, 20.247927320979);
			AddNote(2, 18.496930920979, 20.137748820979);
			AddNote(2, 18.505813027972, 20.039749527972);
			AddNote(2, 18.486811965734, 19.911252565734);
			AddNote(2, 18.500672917482, 20.030088117482);

			AddNote(3, 21.467400127972, 22.670880927972);
			AddNote(3, 21.457035127972, 22.876631727972);
			AddNote(3, 21.349121727972, 22.877427627972);
			AddNote(3, 21.473535986713, 22.898017086713);
			AddNote(3, 21.461887379720, 22.666653979720);
			AddNote(3, 21.563042920979, 22.873951720979);
			AddNote(3, 21.449224720979, 22.982163920979);
			AddNote(3, 21.459492727972, 22.663848727972);
			AddNote(3, 21.553421165734, 22.862793465734);
			AddNote(3, 21.451434017482, 22.875112817482);

			AddNote(4, 25.075324327972, 26.166054627972);
			AddNote(4, 25.065170027972, 26.266512427972);
			AddNote(4, 25.177877027972, 26.379115327972);
			AddNote(4, 25.178577179720, 26.054988779720);
			AddNote(4, 25.170146320979, 26.264390720979);
			AddNote(4, 25.058769520979, 26.155054620979);
			AddNote(4, 25.068705727972, 26.271909327972);
			AddNote(4, 25.161880265734, 26.146270865734);
			AddNote(4, 25.171800217482, 26.046899217482);

			AddNote(5, 27.697700627972, 29.232449227972);
			AddNote(5, 27.798445027972, 29.439805527972);
			AddNote(5, 27.801936127972, 29.329987427972);
			AddNote(5, 27.819075486713, 29.021480786713);
			AddNote(5, 27.699232379720, 29.338057079720);
			AddNote(5, 27.797510320979, 29.215493120979);
			AddNote(5, 27.684532520979, 29.108821420979);
			AddNote(5, 27.807136927972, 29.122318127972);
			AddNote(5, 27.787008065734, 29.319443665734);
			AddNote(5, 27.797166617482, 29.437084517482);

			AddNote(6, 30.218492227972, 31.964947327972);
			AddNote(6, 30.314687527972, 32.281805527972);
			AddNote(6, 30.314743227972, 32.179552927972);
			AddNote(6, 30.213158479720, 31.852917979720);
			AddNote(6, 30.201666720979, 31.840770520979);
			AddNote(6, 30.320077027972, 32.074742927972);
			AddNote(6, 30.306860565734, 31.830848665734);
			AddNote(6, 30.314585417482, 32.060969617482);

			AddNote(7, 32.620363627972, 33.935233327972);
			AddNote(7, 32.629007986713, 33.730137986713);
			AddNote(7, 32.510385079720, 34.039361379720);
			AddNote(7, 32.609442320979, 33.922657720979);
			AddNote(7, 32.605971220979, 34.138797920979);
			AddNote(7, 32.615802227972, 34.042118627972);
			AddNote(7, 32.488289365734, 34.020357365734);
			AddNote(7, 32.608575117482, 34.030683617482);

			AddNote(8, 37.105922127972, 38.636351427972);
			AddNote(8, 37.097610027972, 38.844388727972);
			AddNote(8, 36.986157527972, 38.740557027972);
			AddNote(8, 37.116428286713, 38.754880886713);
			AddNote(8, 37.099592979720, 38.743595579720);
			AddNote(8, 37.090841920979, 38.844193720979);
			AddNote(8, 37.089358120979, 38.839219320979);
			AddNote(8, 37.101211727972, 38.745717327972);
			AddNote(8, 37.081244165734, 38.721762865734);
			AddNote(8, 37.095577817482, 38.735971817482);

			AddNote(9, 40.056336227972, 41.371643027972);
			AddNote(9, 40.157019427972, 41.470643027972);
			AddNote(9, 40.054474927972, 41.580399527972);
			AddNote(9, 40.068476186713, 41.490149586713);
			AddNote(9, 40.058176379720, 41.478920879720);
			AddNote(9, 40.044367220979, 41.469061520979);
			AddNote(9, 40.046365820979, 41.246438120979);
			AddNote(9, 40.162540927972, 41.475401827972);
			AddNote(9, 40.146134965734, 41.566971365734);
			AddNote(9, 40.160481817482, 41.470011917482);


			AddNote(10, 46.399881027972, 48.043425027972);
			AddNote(10, 46.394214327972, 48.141807527972);
			AddNote(10, 46.392916327972, 48.033995727972);
			AddNote(10, 46.410935686713, 47.944061586713);
			AddNote(10, 46.399519279720, 48.043265079720);
			AddNote(10, 46.277933120979, 48.027965420979);
			AddNote(10, 46.387409520979, 48.027179220979);
			AddNote(10, 46.398224127972, 48.151007927972);
			AddNote(10, 46.378094765734, 47.909077965734);
			AddNote(10, 46.280247017482, 47.924661717482);

			AddNote(11, 48.920281527972, 51.544577827972);
			AddNote(11, 48.797274627972, 51.532414727972);
			AddNote(11, 48.802898327972, 51.537707827972);
			AddNote(11, 48.820783686713, 51.555929186713);
			AddNote(11, 48.803277179720, 51.649454779720);
			AddNote(11, 48.795160720979, 51.421241420979);
			AddNote(11, 48.794112020979, 51.309917520979);
			AddNote(11, 48.913943027972, 51.646539927972);
			AddNote(11, 48.893402565734, 51.518606665734);
			AddNote(11, 48.911039617482, 51.536471117482);

			AddNote(12, 51.759538827972, 53.947007427972);
			AddNote(12, 51.750907027972, 54.049960027972);
			AddNote(12, 51.752906027972, 54.049504427972);
			AddNote(12, 51.773341986713, 54.398482086713);
			AddNote(12, 51.756868579720, 54.380830379720);
			AddNote(12, 51.750332620979, 54.154689420979);
			AddNote(12, 51.751357320979, 54.043509720979);
			AddNote(12, 51.871190327972, 54.493323727972);
			AddNote(12, 51.739375265734, 54.143594665734);
			AddNote(12, 51.750053917482, 54.266138517482);

			AddNote(13, 55.152855427972, 58.979273427972);
			AddNote(13, 55.144773127972, 59.298010427972);
			AddNote(13, 55.366112627972, 59.190475327972);
			AddNote(13, 55.163204086713, 59.319148386713);
			AddNote(13, 55.146788379720, 59.302978479720);
			AddNote(13, 55.249961520979, 59.402899620979);
			AddNote(13, 55.354809120979, 58.967598720979);
			AddNote(13, 55.149794027972, 59.194727227972);
			AddNote(13, 55.248615617482, 59.411640517482);

			AddNote(14, 60.073946127972, 62.696803027972);
			AddNote(14, 60.065840327972, 62.801929327972);
			AddNote(14, 59.961805227972, 62.689949827972);
			AddNote(14, 59.978039186713, 62.603846086713);
			AddNote(14, 60.073819979720, 62.698949279720);
			AddNote(14, 59.953135820979, 62.580451920979);
			AddNote(14, 60.061649620979, 62.577246820979);
			AddNote(14, 60.073092527972, 62.696294127972);
			AddNote(14, 60.049540365734, 62.458914265734);
			AddNote(14, 60.065662917482, 62.578641117482);

			AddNote(15, 63.027443527972, 65.324832427972);
			AddNote(15, 62.907503927972, 65.423875027972);
			AddNote(15, 62.911901427972, 65.315609527972);
			AddNote(15, 62.929703786713, 65.442641886713);
			AddNote(15, 62.912766879720, 65.209027879720);
			AddNote(15, 62.902427320979, 65.205004320979);
			AddNote(15, 62.902486520979, 65.310119420979);
			AddNote(15, 62.913079227972, 65.323550127972);
			AddNote(15, 63.002458565734, 65.409426965734);
			AddNote(15, 62.905363617482, 65.316784417482);

			AddNote(16, 66.309656727972, 71.232539627972);
			AddNote(16, 66.409015527972, 71.223165727972);
			AddNote(16, 66.300394227972, 71.224077927972);
			AddNote(16, 66.427217286713, 71.347732986713);
			AddNote(16, 66.415648879720, 71.227862479720);
			AddNote(16, 66.403110820979, 71.215847120979);
			AddNote(16, 66.293348420979, 69.905738620979);
			AddNote(16, 66.304088727972, 71.228536627972);
			AddNote(16, 66.397408465734, 71.207160565734);
			AddNote(16, 66.407545517482, 69.904698717482);
		}


		private static void AddNote(int index, double s, double e)
		{
			noteStartSum[index] += (float)s;
			noteEndSum[index] += (float)e;
			samplesCount[index]++;
		}